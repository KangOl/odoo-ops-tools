#!/usr/bin/env bash

set -e -o pipefail
# set -x

## ------------- options handling
VERIFY=true
COMMIT=true

GETOPT="/usr/local/opt/gnu-getopt/bin/getopt"
if [[ ! -x "$GETOPT" ]]; then
    GETOPT=$(type -P getopt)
fi

OPTS=$($GETOPT -o '' -l no-verify,no-commit -n git-commit-merge -- "$@")

eval set -- "$OPTS"

while true; do
  case "$1" in
    --no-verify ) VERIFY=false; shift ;;
    --no-commit ) COMMIT=false; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

# --------------------

test -n "$(command -v rg)" || exit 1
test -n "$(command -v lsdiff)" || exit 1


function em() {
    if [[ -t 2 ]]; then
        printf '\033[1;36m%s\033[0m\n' "$1"
    else
        # shellcheck disable=SC2016
        printf '`%s`' "$1"
    fi
}

function error() {
    if [[ -t 2 ]]; then
        echo -n -e '\033[1;31mERROR\033[0m ðŸ™… ' >&2
    else
        echo -n 'ERROR ' >&2
    fi
    echo "$@" >&2
    exit 1
}

if ! git diff-index --quiet HEAD -- odoo/release.py; then
    error "release.py changed"
fi

un=$(git status --porcelain -uall | grep -cvE '^[DMARC] ' || true)
if test "${un}" -ne 0; then
    error "unstaged/untracked files"
fi

branch=$(git symbolic-ref --short HEAD)
diff=$(git diff -z --cached --diff-filter=ACM HEAD)

python="python3"
if [[ ${branch//[-.sa]/} -lt 110 ]]; then
    python="python2"
fi

lsdiff -i '*.py' <<< "$diff" | xargs -r -- "$python" -m compileall -q

function grep_diff() {
    found=$(echo "$diff" | rg --pcre2 -s -c "^\+.*$1" || echo 0)
    test "${found}" -gt 0
    return $?
}

function check_saas121() {
    if grep_diff "\bpycompat\.(?!(csv_reader|csv_writer|to_text|reraise)\()"; then
        error "[saas~12.1] pycompat usage found"
    fi
}

function check_saas122() {
    if grep_diff "\btrack_(visibility|sequence)\b"; then
        error "[saas~12.2] track_visibility/sequence usage found"
    fi
}

function check_saas123() {
    # shellcheck disable=SC2016
    if grep_diff '\$\.when\('; then
        error '[saas~12.3] usage of `$.when()` found'
    elif grep_diff '\$\.Deferred\('; then
        error '[saas~12.3] usage of `$.Deferred()` found'
    elif grep_diff '\.(done|always)\('; then
        error '[saas~12.3] usage of methods `done` or `always` found'
    elif grep_diff '\bweb_editor\.base\b'; then
        error '[saas~12.3] usage of web_editor.base found'
    fi
}

function check_master() {
    return
}

if [[ $VERIFY = true ]]; then
    func="check_${branch//[-.]/}"
    if declare -f "$func" >/dev/null; then
        $func
    fi
fi

if [[ $COMMIT = true ]]; then
    git commit --no-edit --no-verify --cleanup=strip
else
    echo "Automatic verification went well; stopped before committing as requested"
fi
